{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x3a622DB2db50f463dF562Dc5F341545A64C580fc",
    "txHash": "0xe73eb6d81c2ac7f9da9081e5721e3fb02d65b460e7119c35c13a1aeafce7c7d6"
  },
  "proxies": [
    {
      "address": "0x6A47346e722937B60Df7a1149168c0E76DD6520f",
      "txHash": "0x99a45b4a6f67e99dae68b79aa51ba8d97b5382b522b75e8cae3932a5a5ba6740",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fff8cbaf3eb51cb3cf4b7601db736d7b79a8047983c893687c7fae553985f698": {
      "address": "0xc6B407503dE64956Ad3cF5Ab112cA4f56AA13517",
      "txHash": "0xf26949327941fca82d63f492f82c3c52b87fc275968ad7649ce4611445090adf",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tree",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(MerkleTree)1032_storage",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:27"
          },
          {
            "label": "claimed",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:30"
          },
          {
            "label": "trusted",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:33"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:36"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(MerkleTree)1032_storage": {
            "label": "struct MerkleTree",
            "members": [
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ipfsHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
