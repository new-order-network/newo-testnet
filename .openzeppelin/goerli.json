{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xE998E354261f41315995003062F9eDeC15268E45",
    "txHash": "0xf6ab63ab50afc069f7298c9135bbbbd236659c8cd3ae24692e6d3dd151067daa"
  },
  "proxies": [
    {
      "address": "0x44c0eB9C89c0df27574E2aA3A5D387F5c9364471",
      "txHash": "0x48915e323d7706960fbb5d7df7a54dda4cc07ea7386fe0fb7caa7f8c12899137",
      "kind": "transparent"
    },
    {
      "address": "0xd5c464fd87414E848AC70207A766A057402B3f23",
      "txHash": "0xbf36505d343d8cf26156fcbf99ba92f83bfdd90a33efca557296ad20f6b44134",
      "kind": "transparent"
    },
    {
      "address": "0xE524942833451da777215d6Bb9Bd872EcD077B6f",
      "txHash": "0xd6ed63be742b44f95219a59ad8e2a79a62b65f3d96d05ec4494f450776fc9cfa",
      "kind": "transparent"
    },
    {
      "address": "0xa52cC093cA3DdF7a91575569CE9f672EC02B2CDe",
      "txHash": "0xd6ee97426c3aa86350c32da73c5811c0fcb5f4fe9a8c8eed386d3d2d09013a87",
      "kind": "transparent"
    },
    {
      "address": "0xde6F60c3BDf5392801DD2aA121c552D8E831bE37",
      "txHash": "0x298d96ba7d47ad61046b6f9155858056130dd65a445a1aee4a9957045ff414c5",
      "kind": "transparent"
    },
    {
      "address": "0x3f0953afAE41e56d1B93A22b753BdFcD0af7Dd46",
      "txHash": "0x946dd9659b33f60b6b8cec03b8fcd23b2b46cf8734a9c4d704174069b3fd82d0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "49c2c2a473567f8ab761f2d3253670f56b48ccc8a0bd416ef58326202ae2f096": {
      "address": "0xA2ba11A5A632997845C0dA5d66570C209e8d976D",
      "txHash": "0x8a89df9af12ff24684157c37edea42d51ed197bf05d6dc9b9c685f9bdbd0733c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "claimed",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:17"
          },
          {
            "label": "trusted",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:20"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:23"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)44_storage",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:28"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "149",
            "type": "t_bytes32",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cf0dbfa0293defc472be74ee7765f6cbf349886edd5ce2d82361d4e070e4eac0": {
      "address": "0xafc07ea1000617FDF1d5D49138e40517c554D5D1",
      "txHash": "0xfa30cb788146ebbcff9656a9bcc517ae5fb6d75a4c7da2d565dd03db3ac68066",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "claimed",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:17"
          },
          {
            "label": "trusted",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:20"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:23"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)44_storage",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:28"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "149",
            "type": "t_bytes32",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c60ef4592a322942237463ee47a4dfa266d9e517fc81386e29b753e3b4debac4": {
      "address": "0xFeF628d548f081a95Eae12e34E80223FBf54eF12",
      "txHash": "0xc4257e7c63c754c0d39e33cb49a45bd8bba5a2bce07f7c3d4221499e937faf66",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "claimed",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:17"
          },
          {
            "label": "trusted",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:20"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:23"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)44_storage",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:28"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "149",
            "type": "t_bytes32",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "10cd03231369a02d7323ff245ba3b88544672f957a1fe1c602b59f1066df4cff": {
      "address": "0xE9a04dC5C4006fBd7d9762339d585D06D4E641A4",
      "txHash": "0x52d0e0946b66cf4e43a0963aa18e453d0780989f476c0a3b422d77efd46f149e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "claimed",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:17"
          },
          {
            "label": "trusted",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:20"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:23"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)44_storage",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:28"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "149",
            "type": "t_bytes32",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fff8cbaf3eb51cb3cf4b7601db736d7b79a8047983c893687c7fae553985f698": {
      "address": "0x941f33Cc8bcE0B699435966d6eBEEF8c50D9D714",
      "txHash": "0xd64b8bf4fdf85285c8971662c65cf872ec21505fd18984438b8cc5c1d36bd5ad",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tree",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(MerkleTree)1032_storage",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:27"
          },
          {
            "label": "claimed",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:30"
          },
          {
            "label": "trusted",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:33"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:36"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "MerkleRootDistributorV2",
            "src": "contracts/MerkleRootDistributorV2.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(MerkleTree)1032_storage": {
            "label": "struct MerkleTree",
            "members": [
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ipfsHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
